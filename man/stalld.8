.\" SPDX-License-Identifier: GPL-2.0-or-later
.TH STALLD 8
.SH NAME
stalld \- detect starving threads and boost them
.SH SYNOPSIS
.B stalld
[ -l ] [ -v ] [ -k ] [ -s ] [ -f ] [ -h ]
[ -c cpu-list]
[ -p time-in-ns ]
[ -r time-in-ns ]
[ -d time-in-sec ]
[ -t time-in-sec ]
[ -i regexes-of-thread-names ]
[ -I regexes-of-process-names ]
[ -R percentage ]
.br

.SH DESCRIPTION
.I stalld
is a system daemon that monitors thread for the starvation
condition.
.IR Starvation
occurs when a thread sits on a cpu run-queue for longer
than the starvation-threshold, meaning the thread has not
been allowed to run for threshold seconds. The thread is
boosted using the SCHED_DEADLINE policy and given a time
period to run. Once it uses this boost period, the thread
is returned to its original scheduling policy.

.SH OPTIONS
.TP
.B \-t|\-\-starving_threshold
how long (in seconds) a thread must starve before being boosted
.B [60 s]
.TP
.B \-p|\-\-boost_period
SCHED_DEADLINE period in nanoseconds for a starving thread
.B [1000000000 ns]
.TP
.B \-r|\-\-boost_runtime
SCHED_DEADLINE runtime in nanoseconds for a starving thread
.B [20000 ns]
.TP
.B \-d|\-\-boost_duration
duration in seconds the starving thread will run
.B [ 3 s]
.TP
.B \-F|\-\-force_fifo
force using SCHED_FIFO for boosting
.TP
.B \-l|\-\-log_only
only log information, do no boosting
.B [false]
.TP
.B \-v|\\-\-verbose
print action informtion to stdout
.B [false]
.TP
.B \-k|\-\-log_kmsg
log information to the kernel buffer
.B [false]
.TP
.B \-s|\-\-log_syslog
print information to syslog
.B [true]
.TP
.B \-f|\-\-foreground
run in the foreground
.B [false (true with \-v)]
.TP
.B \-P|\-\-pidfile
write daemon pid to specified file
.B [none]
.TP
.B \-A|\-\-aggressive_mode
dispatch one thread per cpu run-queue, even if thre are no starving
threads (uses more power).
.B [false]
.TP
.B \-O|\-\-power_mode
run as a single threaded program, it consumes less CPU, at the price
of less precision/granularity.
.B [false]
.TP
.B \-M|\-\-adaptive_mode
when a CPU shows threads starving for more than half of the
starving_threshold time, dispatch a specialized thread to monitor it.
.B [false]
.TP
.B \-g|\-\-granularity
set the granularity (in seconds) at which stalld checks for starving
threads. The lower the value the more precise will be the detection,
at the price of consuming more CPU time.
.B [5 seconds]
.TP
.B \-R|\-\-reservation
set the percentage of CPU time reserved for stalld via SCHED_DEADLINE.
In this way, stalld cannot starve due to high priority threads, also
avoid indirect starvation via priority inversion.
.B [not set]
.TP
.B \-i|\-\-ignore_threads
regexes (comma-separated) of thread names that must be ignored from
being boosted
.TP
.B \-I|\-\-ignore_processes
regexes (comma-separated) of process names that must be ignored from
being boosted
.TP
.B \-b|\-\-backend
selects the backend to search for starving tasks, options are:

.B sched_debug || S:
for sched/debug file (default option).

.B queue_track || Q:
for tracking enqueue/dequeue of tasks in the runqueues.
.TP
.B \-h|\-\-help
print options
.SH FILES
.PD 0
.TP 20
.B /etc/systemd/stalld.conf
parameter file for systemd startup
.TP
.B /usr/lib/systemd/system/stalld.service
systemd unit file
.TP
.B /usr/bin/stalld
stalld executable
.SH BUGS
none
.SH AUTHOR
Daniel Bristot de Oliveira (bristot@redhat.com)
Juri Lelli (juri.lelli@redhat.com)
