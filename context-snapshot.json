{
  "snapshot_date": "2025-10-06T19:30:00Z",
  "project": {
    "name": "stalld",
    "description": "Linux starvation detection and avoidance daemon",
    "purpose": "Monitors CPU run queues for starving threads and boosts them using SCHED_DEADLINE or SCHED_FIFO",
    "primary_use_case": "DPDK deployments with isolated CPUs running single busy-loop RT tasks",
    "warning": "Not recommended for safety-critical systems"
  },
  "repository": {
    "path": "/nas/src/RedHat/gitlab/stalld/stalld.git",
    "current_branch": "tests",
    "main_branch": "main",
    "working_tree": "clean",
    "last_commits": [
      {
        "hash": "1fda90d449a0",
        "message": "docs: Update TODO.md with DL-server management and recent improvements",
        "date": "2025-10-06"
      },
      {
        "hash": "fc2267cf66e4",
        "message": "tests: Add DL-server save/disable/restore support",
        "date": "2025-10-06"
      },
      {
        "hash": "f7188bca52d6",
        "message": "tests: Fix test_task_merging empty variable errors and add DL-server check",
        "date": "2025-10-06"
      },
      {
        "hash": "54c04ebf5d7a",
        "message": "tests: Automatically save and restore RT throttling state",
        "date": "2025-10-06"
      },
      {
        "hash": "e8f2c8f08a22",
        "message": "tests: Add RT throttling save/restore helpers",
        "date": "2025-10-06"
      },
      {
        "hash": "339af8570d87",
        "message": "tests: Add Phase 3.3 task merging and idle detection tests - Phase 3 COMPLETE",
        "date": "2025-10-06"
      }
    ]
  },
  "structure": {
    "source_code": {
      "directory": "src/",
      "files": [
        {
          "name": "stalld.c",
          "description": "Main daemon logic, entry point, boosting",
          "lines": 1218,
          "key_functions": ["main() at line 1121", "boost_with_deadline() at line 438", "check_starving_tasks() at line 616"]
        },
        {
          "name": "sched_debug.c",
          "description": "Procfs backend for parsing /proc|sys/.../sched/debug"
        },
        {
          "name": "queue_track.c",
          "description": "eBPF backend for BPF-based task tracking"
        },
        {
          "name": "utils.c",
          "description": "Utilities: logging, CPU parsing, argument parsing"
        },
        {
          "name": "throttling.c",
          "description": "RT throttling detection and control"
        }
      ]
    },
    "ebpf": {
      "directory": "bpf/",
      "files": ["stalld.bpf.c - BPF tracepoint programs for task tracking"]
    },
    "tests": {
      "directory": "tests/",
      "infrastructure": [
        "run_tests.sh (461 lines) - Main test runner with auto-discovery, RT throttling and DL-server management",
        "helpers/test_helpers.sh (518 lines) - 25+ helper functions including system state management",
        "helpers/starvation_gen.c (267 lines) - Configurable starvation generator"
      ],
      "directories": ["functional/", "unit/", "integration/", "fixtures/", "results/"],
      "features": [
        "Automatic RT throttling save/disable/restore",
        "Optional DL-server save/disable/restore (--disable-dl-server flag)",
        "Color-coded output (RED/GREEN/YELLOW)",
        "Individual test logs in results/",
        "Exit codes: 0=pass, 1=fail, 77=skip"
      ]
    },
    "documentation": [
      "CLAUDE.md - Comprehensive development guide",
      "README.md - Project overview",
      "tests/README.md - Test documentation",
      "tests/TODO.md - Test implementation plan (updated with Phase 3 completion)",
      "man/stalld.8 - Man page"
    ],
    "configuration": [
      ".claude/rules - Agent usage guidelines",
      ".claude/agents/ - Custom agents",
      "systemd/stalld.service - systemd unit file",
      "systemd/stalld.conf - Configuration"
    ]
  },
  "test_suite": {
    "total_tests": 19,
    "total_lines": "5000+",
    "test_cases": "85+",
    "status": {
      "passing": 18,
      "failing": 0,
      "skipped": 1,
      "note": "test_task_merging.sh skips on systems with DL-server (use --disable-dl-server to run)"
    },
    "phases": {
      "phase_1_foundation": {
        "status": "complete",
        "tests": 4,
        "description": [
          "test01.c - Original starvation test (fixed with 7 critical bug fixes)",
          "test_foreground.sh - Foreground mode (-f)",
          "test_log_only.sh - Log-only mode (-l)",
          "test_logging_destinations.sh - Logging options (-v, -k, -s)"
        ]
      },
      "phase_2_command_line_options": {
        "status": "complete",
        "tests": 8,
        "lines": 1543,
        "test_cases": 50,
        "description": [
          "test_cpu_selection.sh - CPU selection (-c, 146 lines, 6 test cases)",
          "test_starvation_threshold.sh - Starvation threshold (-t, 177 lines, 4 test cases)",
          "test_boost_period.sh - Boost period (-p, 175 lines, 6 test cases)",
          "test_boost_runtime.sh - Boost runtime (-r, 203 lines, 7 test cases)",
          "test_boost_duration.sh - Boost duration (-d, 186 lines, 6 test cases)",
          "test_force_fifo.sh - Force FIFO mode (-F, 244 lines, 6 test cases)",
          "test_pidfile.sh - PID file management (-P, 198 lines, 7 test cases)",
          "test_affinity.sh - CPU affinity (-a, 214 lines, 8 test cases)"
        ]
      },
      "phase_3_core_logic": {
        "status": "complete",
        "tests": 7,
        "lines": "2500+",
        "test_cases": "35+",
        "description": {
          "phase_3_1_starvation_detection": [
            "test_starvation_detection.sh (394 lines, 6 test cases) - Verify starvation detection logic",
            "test_runqueue_parsing.sh (434 lines, 5 test cases) - Test backend parsing (eBPF and sched_debug)"
          ],
          "phase_3_2_boosting_mechanisms": [
            "test_deadline_boosting.sh (451 lines, 5 test cases) - SCHED_DEADLINE boosting verification",
            "test_fifo_boosting.sh (401 lines, 5 test cases) - SCHED_FIFO boosting verification",
            "test_boost_restoration.sh (445 lines, 5 test cases) - Policy restoration verification"
          ],
          "phase_3_3_task_merging_and_idle": [
            "test_task_merging.sh (356 lines, 4 test cases) - Task merging logic with DL-server detection",
            "test_idle_detection.sh (274 lines, 5 test cases) - Idle CPU detection optimization"
          ]
        }
      },
      "phase_4_advanced_features": {
        "status": "pending",
        "estimated_time": "1.5-2 weeks",
        "tests_planned": [
          "test_single_threaded_mode.sh",
          "test_adaptive_mode.sh",
          "test_aggressive_mode.sh",
          "test_thread_ignore.sh",
          "test_process_ignore.sh",
          "test_backend_comparison.sh",
          "test_sched_debug_formats.sh"
        ]
      },
      "phase_5_integration": {
        "status": "pending",
        "estimated_time": "1-1.5 weeks"
      },
      "phase_6_polish": {
        "status": "pending",
        "estimated_time": "1 week"
      }
    }
  },
  "test_infrastructure_features": {
    "rt_throttling_management": {
      "description": "Automatic save/disable/restore of RT throttling",
      "functions": ["save_rt_throttling()", "restore_rt_throttling()", "disable_rt_throttling()"],
      "location": "helpers/test_helpers.sh",
      "behavior": "Test runner automatically saves state, disables for tests, restores on exit/interrupt"
    },
    "dl_server_management": {
      "description": "Optional save/disable/restore of kernel DL-server (Linux 6.6+)",
      "functions": ["save_dl_server()", "restore_dl_server()", "disable_dl_server()"],
      "location": "helpers/test_helpers.sh",
      "usage": "./run_tests.sh --disable-dl-server",
      "purpose": "Allows testing stalld starvation detection on kernels with built-in DL-server",
      "mechanism": "Saves /sys/kernel/debug/sched/fair_server/cpuN/runtime, writes 0 to disable, restores on exit"
    },
    "helper_functions": {
      "assertions": [
        "assert_equals", "assert_contains", "assert_not_contains",
        "assert_file_exists", "assert_file_not_exists",
        "assert_process_running", "assert_process_not_running"
      ],
      "stalld_management": ["start_stalld", "stop_stalld"],
      "system_helpers": [
        "require_root", "check_rt_throttling",
        "get_num_cpus", "get_online_cpus", "pick_test_cpu",
        "wait_for_log_message", "get_thread_policy", "get_thread_priority"
      ],
      "cleanup": "Automatic via trap (EXIT, INT, TERM)"
    }
  },
  "project_rules": {
    "file": ".claude/rules",
    "mandatory_agents": {
      "git_operations": {
        "agent": "git-scm-master",
        "use_for": [
          "Creating commits",
          "Organizing uncommitted changes",
          "Refactoring commit history",
          "Managing branches",
          "Any git workflow tasks"
        ]
      },
      "c_development": {
        "agent": "c-expert",
        "use_for": [
          "Analyzing C code",
          "Generating new C code",
          "Modifying existing C code",
          "Reviewing C code for bugs or improvements",
          "Optimizing C code performance",
          "Debugging C code issues"
        ]
      },
      "testing": {
        "agent": "test-specialist",
        "use_for": [
          "Creating new tests",
          "Modifying existing tests",
          "Reviewing test coverage",
          "Implementing TDD cycles",
          "Writing test infrastructure or helpers",
          "Debugging test failures",
          "Planning test strategies"
        ],
        "special_authority": "Has BLOCKING POWER for commits with insufficient test coverage"
      },
      "planning": {
        "agent": "plan-validator",
        "use_for": [
          "Planning next steps in the project",
          "Modifying the current plan (TODO.md)",
          "Reviewing implementation strategies",
          "Assessing project feasibility",
          "Validating timeline estimates",
          "Reviewing development roadmaps"
        ]
      }
    }
  },
  "build_status": {
    "stalld_binary": {
      "path": "./stalld",
      "built": true
    },
    "test_binaries": [
      "tests/test01",
      "tests/helpers/starvation_gen"
    ],
    "architecture": "Linux x86_64",
    "kernel_version": "6.16.9-200.fc42.x86_64"
  },
  "key_technical_details": {
    "backends": {
      "primary": "queue_track_backend (eBPF-based, default on x86_64/aarch64/s390x)",
      "fallback": "sched_debug_backend (procfs-based, for i686/powerpc/legacy kernels)"
    },
    "scheduling_policies": {
      "preferred": "SCHED_DEADLINE",
      "fallback": "SCHED_FIFO",
      "note": "Single-threaded mode only works with SCHED_DEADLINE"
    },
    "threading_modes": [
      "Single-threaded (default)",
      "Adaptive (spawns per-CPU threads when approaching threshold)",
      "Aggressive (-A flag, per-CPU threads from startup)"
    ],
    "requirements": {
      "rt_throttling": "Must be disabled (/proc/sys/kernel/sched_rt_runtime_us == -1)",
      "permissions": "Root required for most operations",
      "kernel": "3.10+ (older untested)"
    },
    "dl_server": {
      "description": "Kernel feature (Linux 6.6+) that provides automatic starvation handling",
      "impact": "When enabled, prevents stalld from detecting starvation",
      "testing": "Use --disable-dl-server flag to test stalld on systems with DL-server"
    }
  },
  "recent_work": {
    "session_focus": "Phase 3 completion and system state management infrastructure",
    "accomplishments": [
      "Completed all Phase 3 core logic tests (7 tests, 35+ test cases)",
      "Implemented RT throttling automatic save/disable/restore",
      "Implemented DL-server automatic save/disable/restore",
      "Fixed test_task_merging.sh variable handling and DL-server detection",
      "Added ~3,000 lines of test code for Phase 3",
      "Updated test infrastructure to 518 lines with 25+ helper functions",
      "Enhanced run_tests.sh to 461 lines with automatic state management",
      "All 19 tests passing (with 1 skip on DL-server systems)"
    ],
    "commits_created": 6,
    "files_created": 7,
    "files_modified": 3,
    "test_coverage_increase": "From 12 to 19 tests (85+ test cases total)"
  },
  "next_steps": {
    "immediate": "Phase 4: Advanced Features Testing",
    "priority_tests": [
      "Threading mode tests (single-threaded, adaptive, aggressive)",
      "Filtering tests (thread and process ignore patterns)",
      "Backend comparison tests",
      "Format detection tests"
    ],
    "estimated_completion": "3-4.5 weeks remaining for full test suite"
  },
  "important_notes": [
    "ALWAYS read .claude/rules at session start",
    "Use specialized agents per project rules",
    "test-specialist has blocking power for insufficient test coverage",
    "Phases 1-3 complete (19 tests), focus on Phase 4 next",
    "Test suite uses helper functions from test_helpers.sh",
    "All tests follow autotools convention: 0=pass, 1=fail, 77=skip",
    "RT throttling and DL-server are automatically managed by test runner",
    "Use --disable-dl-server flag on Linux 6.6+ to test stalld starvation detection"
  ]
}
