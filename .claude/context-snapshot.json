{
  "timestamp": "2025-10-13T12:45:00-05:00",
  "session": "Critical Segfault Fix and Backend Limitation Documentation",
  "branch": "tests_and_parser",
  "commits_ahead_of_main": 66,
  "latest_commit": {
    "hash": "e87ae9fcd224",
    "message": "Document queue_track backend limitation in test_starvation_threshold.sh",
    "files_changed": [
      "tests/functional/test_starvation_threshold.sh"
    ]
  },
  "uncommitted_changes": [
    ".claude/context-snapshot.json",
    "src/sched_debug.c"
  ],
  "current_work": {
    "task": "Document critical segfault fix and queue_track backend limitation",
    "status": "COMPLETE",
    "session_summary": {
      "user_request": "Continue from previous session: commit changes to test_starvation_threshold.sh, update CLAUDE.md, update tests/TODO.md, save context-snapshot",
      "critical_fixes": [
        "Fixed segfault in merge_taks_info() for adaptive/aggressive modes (commit 7af4f55a5765)",
        "Documented queue_track backend limitation with SCHED_FIFO tasks (commit e87ae9fcd224)"
      ],
      "commits_created": 2,
      "files_modified": 4
    }
  },
  "project_state": {
    "current_phase": "Phase 3 Complete (Core Logic Testing)",
    "test_coverage": {
      "total_tests": "19 functional tests",
      "passing": "17+ (some timing edge cases in Phase 3)",
      "known_issues": [
        "queue_track backend limitation with SCHED_FIFO tasks",
        "test_boost_restoration.sh: 3/5 passes (2 timing edge cases)",
        "test_fifo_boosting.sh: 3/5 passes (2 timing edge cases)"
      ]
    },
    "build_status": "Clean build successful, USE_BPF=1, x86_64",
    "rt_throttling": "Disabled (-1)",
    "matrix_testing": "Fully implemented (2 backends Ã— 3 threading modes)"
  },
  "session_work": {
    "critical_segfault_fix": {
      "commit": "7af4f55a5765",
      "description": "Fix segfault in adaptive/aggressive modes",
      "root_cause": "merge_taks_info() unconditionally called update_cpu_starving_vector() at line 389, but cpu_starving_vector only allocated in single_threaded_main() at line 1007",
      "impact": "Adaptive/aggressive modes crashed when parsing tasks (any backend)",
      "fix": "Added if (config_single_threaded) guards before both update_cpu_starving_vector() calls at lines 389 and 401",
      "files_modified": "src/stalld.c",
      "result": "test_starvation_threshold.sh now passes on sched_debug with adaptive mode"
    },
    "queue_track_limitation_documentation": {
      "commit": "e87ae9fcd224",
      "description": "Document queue_track backend limitation in test_starvation_threshold.sh",
      "finding": "queue_track (BPF) backend cannot detect SCHED_FIFO tasks waiting on runqueue",
      "root_cause": "task_running() check at stalld.bpf.c:273 only tracks __state == TASK_RUNNING, but runnable SCHED_FIFO tasks waiting on runqueue have different __state values",
      "evidence": "Manual testing showed queue_track only detected pre-existing kworker tasks, completely missed SCHED_FIFO blockee tasks created by starvation_gen (blocker at priority 80, blockees at priority 1)",
      "impact": "Tests using starvation_gen fail on queue_track but pass on sched_debug",
      "workaround": "Use sched_debug backend for tests requiring SCHED_FIFO task detection",
      "files_modified": "tests/functional/test_starvation_threshold.sh (lines 7-12)"
    },
    "documentation_updates": {
      "CLAUDE_md": {
        "updated_entries": [
          "test_starvation_threshold.sh - Tests -t threshold option (fixed segfault, documented queue_track limitation)",
          "test_boost_restoration.sh - Verifies policy restoration after boosting (5 tests, 3 pass on sched_debug)",
          "test_fifo_boosting.sh - Tests SCHED_FIFO boosting (5 tests, 3 pass on sched_debug)"
        ],
        "added_section": "Known Issues section documenting queue_track limitation and segfault fix"
      },
      "TODO_md": {
        "added_section": "2025-10-13 - Critical Segfault Fix and Backend Limitation Documentation",
        "content": [
          "Detailed segfault fix documentation (root cause, problem, impact, fix, commit, files, result)",
          "Detailed queue_track limitation documentation (finding, root cause, evidence, impact, documentation, workaround)",
          "Test validation results (test_boost_restoration.sh: 3/5 passes, test_fifo_boosting.sh: 3/5 passes)",
          "Commits created: 7af4f55a5765, e87ae9fcd224",
          "Updated status: Phase 0-3 Complete, Phase 4 Pending",
          "Known issues: queue_track backend limitation with SCHED_FIFO tasks, 5 old-style Phase 2 tests need rewrites"
        ]
      }
    }
  },
  "technical_insights": {
    "cpu_starving_vector": {
      "description": "Global array used ONLY in single-threaded/power mode to track one starving task per CPU",
      "allocation": "Only allocated in single_threaded_main() at src/stalld.c:1007",
      "usage": "update_cpu_starving_vector() called from merge_taks_info() and boost_cpu_starving_vector()",
      "bug": "merge_taks_info() called by all threading modes, but cpu_starving_vector only allocated in single-threaded mode",
      "fix": "Added if (config_single_threaded) guards before update_cpu_starving_vector() calls"
    },
    "queue_track_limitation": {
      "description": "BPF backend cannot detect SCHED_FIFO tasks waiting on runqueue",
      "root_cause": "task_running() at stalld.bpf.c:273 only tracks __state == TASK_RUNNING",
      "problem": "Runnable SCHED_FIFO tasks on runqueue have different __state values",
      "comparison": "sched_debug backend reads kernel's .rt_nr_running counter directly, doesn't have this limitation",
      "workaround": "Use sched_debug backend for tests requiring SCHED_FIFO task detection"
    },
    "merge_taks_info": {
      "location": "src/stalld.c:380-408",
      "purpose": "Preserves starvation timestamps for tasks making no progress (same PID, same context switch count)",
      "called_by": "Both backends after parsing tasks",
      "threading_mode_awareness": "Now properly guards single-threaded-only operations"
    },
    "starvation_gen": {
      "location": "tests/helpers/starvation_gen.c",
      "purpose": "Configurable starvation generator for controlled testing",
      "creates": "SCHED_FIFO blocker (priority 80) + SCHED_FIFO blockees (priority 1)",
      "usage": "starvation_gen -c CPU -p priority -n num_threads -d duration -v",
      "limitation": "Works with sched_debug backend, not queue_track (due to BPF __state limitation)"
    }
  },
  "commits_this_session": [
    {
      "hash": "7af4f55a5765",
      "message": "Fix segfault in adaptive/aggressive modes",
      "description": "Added if (config_single_threaded) guards before update_cpu_starving_vector() calls",
      "impact": "Fixes critical crash in adaptive/aggressive threading modes",
      "lines_changed": "src/stalld.c: lines 389, 401"
    },
    {
      "hash": "e87ae9fcd224",
      "message": "Document queue_track backend limitation in test_starvation_threshold.sh",
      "description": "Added comprehensive comment explaining BPF backend's SCHED_FIFO detection limitation",
      "impact": "Helps future developers understand why queue_track fails SCHED_FIFO tests",
      "lines_changed": "tests/functional/test_starvation_threshold.sh: lines 7-12"
    }
  ],
  "test_validation": {
    "test_starvation_threshold_sh": {
      "backend": "sched_debug",
      "threading_mode": "adaptive",
      "status": "PASS (after segfault fix)"
    },
    "test_boost_restoration_sh": {
      "backend": "sched_debug",
      "status": "3/5 passes",
      "failures": "2 timing-related edge cases",
      "assessment": "Acceptable for now, tests mostly work"
    },
    "test_fifo_boosting_sh": {
      "backend": "sched_debug",
      "status": "3/5 passes",
      "failures": "2 timing-related edge cases",
      "assessment": "Acceptable for now, tests mostly work"
    }
  },
  "next_steps": {
    "immediate": [
      "Consider addressing timing edge cases in test_boost_restoration.sh and test_fifo_boosting.sh (optional)",
      "Continue with Phase 4: Advanced Features (threading modes, filtering, backend comparison, integration tests)"
    ],
    "phase_4_planned": [
      "test_single_threaded_mode.sh - Test power/single-threaded mode",
      "test_adaptive_mode.sh - Test adaptive multi-threading",
      "test_aggressive_mode.sh - Test aggressive mode",
      "test_thread_ignore.sh - Test -i regex thread filtering",
      "test_process_ignore.sh - Test -I regex process filtering",
      "test_backend_comparison.sh - Compare eBPF vs procfs backends",
      "test_sched_debug_formats.sh - Test procfs backend format handling"
    ]
  },
  "implementation_notes": {
    "test_helpers_updates": {
      "file": "tests/helpers/test_helpers.sh",
      "lines": "~706",
      "features": [
        "parse_test_options() supports -b/--backend and -m/--threading-mode",
        "start_stalld() applies threading mode flags (-O, -M, -A)",
        "STALLD_TEST_BACKEND and STALLD_TEST_THREADING_MODE environment variables",
        "Assertions: assert_equals, assert_contains, assert_file_exists, assert_process_running",
        "stalld management: start_stalld, stop_stalld with PID tracking",
        "System helpers: require_root, check_rt_throttling, pick_test_cpu, wait_for_log_message",
        "RT throttling: save_rt_throttling, restore_rt_throttling, disable_rt_throttling",
        "DL-server: save_dl_server, restore_dl_server, disable_dl_server",
        "Automatic cleanup via trap (EXIT, INT, TERM)"
      ]
    },
    "matrix_testing_infrastructure": {
      "file": "tests/run_tests.sh",
      "lines": "~785",
      "features": [
        "Backend matrix: 2 backends (sched_debug, queue_track)",
        "Threading mode matrix: 3 modes (power, adaptive, aggressive)",
        "Per-backend/mode statistics tracking",
        "Performance flags: --full-matrix, --quick, --backend-only, --no-backend-matrix",
        "Skip logic: power mode automatically skips FIFO tests",
        "Enhanced help text with matrix testing documentation"
      ],
      "default_behavior": "Backend matrix enabled (2Ã— runtime), threading mode matrix disabled",
      "full_matrix": "6Ã— runtime (2 backends Ã— 3 threading modes)"
    }
  },
  "files_of_interest": {
    "stalld_main": "src/stalld.c (1,252 LOC)",
    "merge_taks_info": "src/stalld.c:380-408",
    "single_threaded_main": "src/stalld.c:991-1100",
    "conservative_main": "src/stalld.c:847-915",
    "aggressive_main": "src/stalld.c:826-845",
    "queue_track_bpf": "bpf/stalld.bpf.c",
    "task_running_check": "bpf/stalld.bpf.c:273",
    "sched_debug_backend": "src/sched_debug.c",
    "test_helpers": "tests/helpers/test_helpers.sh",
    "test_runner": "tests/run_tests.sh",
    "starvation_generator": "tests/helpers/starvation_gen.c"
  },
  "known_issues": {
    "queue_track_limitation": {
      "description": "BPF backend cannot detect SCHED_FIFO tasks waiting on runqueue",
      "root_cause": "task_running() check at stalld.bpf.c:273 only tracks __state == TASK_RUNNING",
      "impact": "Tests using starvation_gen fail on queue_track but pass on sched_debug",
      "workaround": "Use sched_debug backend for SCHED_FIFO tests",
      "documentation": "Documented in test_starvation_threshold.sh lines 7-12"
    },
    "timing_edge_cases": {
      "affected_tests": [
        "test_boost_restoration.sh (2/5 tests fail due to timing)",
        "test_fifo_boosting.sh (2/5 tests fail due to timing)"
      ],
      "assessment": "Acceptable for now, tests mostly work",
      "future_work": "Optional: investigate and fix timing-sensitive tests"
    },
    "old_style_tests": {
      "count": 5,
      "tests": [
        "test_boost_runtime.sh",
        "test_boost_duration.sh",
        "test_affinity.sh",
        "test_force_fifo.sh (SKIPPED by user request)",
        "test_pidfile.sh"
      ],
      "issue": "Use old SCRIPT_DIR pattern, undefined variables, may hang or fail",
      "fix_pattern": "Follow test_boost_period.sh and test_starvation_threshold.sh rewrites"
    }
  },
  "notes": {
    "session_quality": "Critical bug fix and comprehensive documentation",
    "debugging_approach": "Used coredumpctl to analyze segfault, identified cpu_starving_vector NULL pointer",
    "investigation_approach": "Manual testing with -v flag to compare queue_track vs sched_debug output",
    "documentation_thoroughness": "Comprehensive documentation in code comments, TODO.md, and CLAUDE.md",
    "git_workflow": "Clean commits with detailed messages and -s sign-off",
    "backward_compatibility": "All fixes maintain backward compatibility",
    "testing_philosophy": "Matrix testing enables comprehensive validation across backends and threading modes"
  }
}
